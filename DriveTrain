/*Dynamixel control
ID_0 & ID_2 are on drive mode 
ID_1 & ID_3 are on joint mode/steer mode
            -> 2048 is 180 degrees of rotation 
            -> 1024 is 90 degreees of rotation
            -> 0 is 0 degrees if rotation
To make dynamixel go forward 
  -> Dxl.writeWord( ID, Moving_Speed, 600 )
  
To make dynamixel go backwards 
  -> Dxl.writeWord( ID, Moving_Speed, 600| 0x600)
  
*/
#define DXL_BUS_SERIAL3 3

#define ID_Left_Wheel 0
#define ID_Right_Wheel 2
#define ID_Steer_1 1 
#define ID_Steer_2 3

#define CCW_Angle_Limit 8
#define Goal_Postion 30
#define Moving_Speed 32

#define CONTROL_MODE 11

int curr_pos = 1024;

Dynamixel Dxl(DXL_BUS_SERIAL3);

void setup() 
{

 Dxl.begin(1);
 Dxl.writeByte(ID_Left_Wheel, CCW_Angle_Limit, 0);
 Dxl.writeByte(ID_Right_Wheel, CCW_Angle_Limit, 0);
 Dxl.jointMode(ID_Steer_1);
 Dxl.jointMode(ID_Steer_2);

}

void loop()
{ 
  
  void TURN_RIGHT()
  {
            if( curr_pos < 2048 && curr_pos > 0)
            {
                        for (curr_pos ; curr_pos < 2048 && curr_pos > 0; curr_pos++)
                        {
                                    Dxl.goalPosition(ID_NUM, curr_pos); //steering wheel 1
                                    Dxl.goalPosition(ID_NUM, curr_pos); // steering wheel 2
                        }
             }
             else 
             {
                        cur_pos = 2048;
             }
  }
  
  void TURN_LEFT()
  {         
         if( curr_pos < 2048 && curr_pos > 0)
         {
            for (curr_pos ; curr_pos < 2048 && curr_pos > 0; curr_pos--)
            {           
                        Dxl.goalPosition(ID_NUM, curr_pos); //steering wheel 1
                        Dxl.goalPosition(ID_NUM, curr_pos); // steering wheel 2
            }
         }
         else 
         {
            curr_pos = 0;
         }
  }
  void GO_FORWARD()
  {
            Dxl.writeWord(ID_Left_Wheel, Moving_Speed,  600); // forward code 
            Dxl.writeWord(ID_Right_Wheel, Moving_Speed, 0x3FF | 600);
  }
 
 void GO_BACKWARD()
  {
            Dxl.writeWord(ID_Left_Wheel, Moving_Speed, 600 | 0x600); // reverse code
            Dxl.writeWord(ID_Right_Wheel, Moving_Speed, 600 | 0x600);
  }
}


